########################################################################
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
########################################################################
AWSTemplateFormatVersion: "2010-09-09"
Description:
  Creates the SRA CodeBuild Project that deploys the staging, common prerequisites, and other components of the SRA. - 'easy_setup' solution in the
  repo, https://github.com/aws-samples/aws-security-reference-architecture-examples (sra-1ssgnse7p)
Parameters:
  pRepoURL:
    Default: https://github.com/aws-samples/aws-security-reference-architecture-examples.git
    Description: SRA Code Library Repository URL
    Type: String
  pRepoBranch:
    Default: main
    Description: SRA Code Library Repository branch name
    Type: String
  pControlTower:
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Indicates whether AWS Control Tower is deployed and being used for this AWS environment.
    Type: String
  pGovernedRegions:
    AllowedPattern: '^(ct-regions)|((\b(?<!@)(af-south-1|ap-east-1|ap-northeast-1|ap-northeast-2|ap-northeast-3|ap-south-1|ap-south-2|ap-southeast-1|ap-southeast-2|ap-southeast-3|ap-southeast-4|ca-central-1|cn-north-1|cn-northwest-1|eu-central-1|eu-central-2|eu-north-1|eu-south-1|eu-south-2|eu-west-1|eu-west-2|eu-west-3|me-central-1|me-south-1|sa-east-1|us-east-1|us-east-2|us-gov-east-1|us-gov-west-1|us-west-1|us-west-2)\b,{0,1})*)$'
    ConstraintDescription:
      For AWS Control Tower, set to ct-regions (default).  If not using AWS Control Tower, specify comma separated list of regions (e.g.
      us-west-2,us-east-1,ap-south-1) in lower case.
    Default: ct-regions
    Description: AWS regions (comma separated) if not using AWS Control Tower (leave set to ct-regions for AWS Control Tower environments)
    Type: String
  pSecurityAccountId:
    AllowedPattern: '^\d{12}$'
    Default: 028425947268
    ConstraintDescription: Must be 12 digits.
    Description: AWS Account ID of the Security Tooling account (ignored for AWS Control Tower environments).
    Type: String
  pLogArchiveAccountId:
    AllowedPattern: '^\d{12}$'
    Default: 623872359440
    ConstraintDescription: Must be 12 digits.
    Description: AWS Account ID of the Log Archive account (ignored for AWS Control Tower environments).
    Type: String
  pSRASolutionName:
    AllowedValues: [sra-common-prerequisites]
    Default: sra-common-prerequisites
    Description: The SRA solution name. The default value is the folder name of the solution
    Type: String
  pSRASolutionTagKey:
    AllowedValues: [sra-solution]
    Default: sra-solution
    Description: The SRA solution tag key applied to all resources created by the solution that support tagging. The value is the pSRASolutionName.
    Type: String
  pCodeBuildProjectName:
    AllowedValues: [sra-codebuild-project]
    Default: sra-codebuild-project
    Description: SRA CodeBuild project name
    Type: String
  pCodeBuildRoleName:
    AllowedValues: [sra-codebuild-role]
    Default: sra-codebuild-role
    Description: SRA CodeBuild role name
    Type: String
  pCodeBuildProjectLambdaRoleName:
    AllowedPattern: '^[\w+=,.@-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -].
    Default: sra-codebuild-project-lambda-role
    Description: Lambda execution role for starting the code build project
    Type: String
  pCodeBuildProjectLambdaFunctionName:
    AllowedPattern: '^[\w-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [_, -]
    Default: sra-codebuild-project-lambda
    Description: Lambda function name for starting the code build project
    Type: String
  pSRAStagingS3BucketNamePrefix:
    AllowedValues: [sra-staging]
    Default: sra-staging
    Description:
      SRA Staging S3 bucket name prefix for the SRA artifacts relevant to the solutions. (e.g., lambda zips, CloudFormation templates). The account
      and region are added to the prefix <bucket-name-prefix>-<account-id>-<region>. Example = sra-staging-123456789012-us-east-1.
    Type: String
  pSRAStagingS3BucketNameSuffix:
    AllowedPattern: '^[a-z0-9]{5}$'
    ConstraintDescription: Must be exactly 5 alphanumeric lowercase characters
    Default: x7k9m
    Description:
      Random suffix of 5 characters to add to S3 bucket names to avoid naming conflicts. Must be exactly 5 alphanumeric lowercase characters.
    Type: String
  pSRAStagingS3BucketStackName:
    AllowedValues: [sra-common-prerequisites-staging-s3-bucket]
    Default: sra-common-prerequisites-staging-s3-bucket
    Description: SRA Common Prerequisite Staging S3 bucket stack name.  This stack will be created by the SRA CodeBuild Project.
    Type: String
  pDeployInspectorSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the Inspector solution
    Type: String
  pDeployAccountAlternateContactsSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the Account Alternate Contacts solution
    Type: String
  pDeployCloudTrailSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the CloudTrail solution
    Type: String
  pDeployConfigConformancePackSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the AWS Config Conformance Pack solution
    Type: String
  pDeployConfigSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the AWS Config solution (This solution is incompatible with the AWS Control Tower environment)
    Type: String
  pDeployConfigManagementSolution:
    AllowedValues: ["Yes", "No", "Already Deployed"]
    Default: "No"
    Description: Deploy the AWS Config Management solution. Note, if solution was previously deployed, choose 'Already Deployed'.
    Type: String
  pDeployDetectiveSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the Detective solution
    Type: String
  pDeployEC2DefaultEBSEncryptionSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the EC2 Default EBS Encryption solution
    Type: String
  pDeployFirewallManagerSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the Firewall Manager solution
    Type: String
  pDeployGuardDutySolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the GuardDuty solution
    Type: String
  pDeployIAMAccessAnalyzerSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the IAM Access Analyzer solution
    Type: String
  pDeployIAMPasswordPolicySolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the IAM Password Policy solution
    Type: String
  pDeployMacieSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the Macie solution
    Type: String
  pDeployS3BlockAccountPublicAccessSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the S3 Block Account Public Access solution
    Type: String
  pDeploySecurityHubSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the Security Hub solution
    Type: String
  pDisableGuardDuty:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Disable the GuardDuty solution in all accounts and regions before deleting the stack.
    Type: String
  pDisableMacie:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Disable the Macie solution in all accounts and regions before deleting the stack.
    Type: String
  pDisableSecurityHub:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Disable the Security Hub solution in all accounts and regions before deleting the stack.
    Type: String
  pCreateLambdaLogGroup:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description:
      Indicates whether a CloudWatch Log Group should be explicitly created for the Lambda function, to allow for setting a Log Retention and/or KMS
      Key for encryption.
    Type: String
  pLambdaLogGroupKmsKey:
    AllowedPattern: '^$|^arn:(aws[a-zA-Z-]*){1}:kms:[a-z0-9-]+:\d{12}:key\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    ConstraintDescription: "Key ARN example:  arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"
    Default: ""
    Description:
      (Optional) KMS Key ARN to use for encrypting the Lambda logs data. If empty, encryption is enabled with CloudWatch Logs managing the server-side
      encryption keys.
    Type: String
  pLambdaLogGroupRetention:
    AllowedValues:
      [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1827,
        3653,
      ]
    Default: 14
    Description: Specifies the number of days you want to retain log events
    Type: String
  pLambdaLogLevel:
    AllowedValues: [INFO, ERROR, DEBUG]
    Default: INFO
    Description: Lambda Function Logging Level
    Type: String
  pBillingContactAction:
    AllowedValues: ["add", "delete", "ignore"]
    Default: add
    Description: Indicates whether to add, delete, or ignore the Billing alternate contact.
    Type: String
  pBillingEmail:
    AllowedPattern: '^$|^([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)$'
    ConstraintDescription: Email Validation as per RFC2822 standards.
    Default: ""
    Description:
      (Optional) Email Address for Billing alternate contact. If 'Billing Alternate Contact Action' parameter is set to 'add', then this parameter
      becomes required.
    Type: String
  pBillingName:
    AllowedPattern: '^(?![&<>\\%|]).*$'
    ConstraintDescription: All characters allowed except '&<>\%|'
    Default: ""
    Description:
      (Optional) Full Name for Billing alternate contact. If 'Billing Alternate Contact Action' parameter is set to 'add', then this parameter becomes
      required.
    Type: String
  pBillingPhone:
    AllowedPattern: '^$|^[\s0-9()+-]+$'
    ConstraintDescription: Must be numbers, special characters [()+-], and/or whitespace
    Default: ""
    Description:
      (Optional) Phone Number for Billing alternate contact. If 'Billing Alternate Contact Action' parameter is set to 'add', then this parameter
      becomes required.
    Type: String
  pBillingTitle:
    AllowedPattern: '^(?![&<>\\%|]).*$'
    ConstraintDescription: All characters allowed except '&<>\%|'
    Default: ""
    Description:
      (Optional) Title for Billing alternate contact. If 'Billing Alternate Contact Action' parameter is set to 'add', then this parameter becomes
      required.
    Type: String
  pOperationsContactAction:
    AllowedValues: ["add", "delete", "ignore"]
    Default: add
    Description: Indicates whether to add, delete, or ignore the Operations alternate contact.
    Type: String
  pOperationsEmail:
    AllowedPattern: '^$|^([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)$'
    ConstraintDescription: Email Validation as per RFC2822 standards.
    Default: ""
    Description:
      (Optional) Email Address for Operations alternate contact. If 'Operations Alternate Contact Action' parameter is set to 'add', then this
      parameter becomes required.
    Type: String
  pOperationsName:
    AllowedPattern: '^(?![&<>\\%|]).*$'
    ConstraintDescription: All characters allowed except '&<>\%|'
    Default: ""
    Description:
      (Optional) Full Name for Operations alternate contact. If 'Operations Alternate Contact Action' parameter is set to 'add', then this parameter
      becomes required.
    Type: String
  pOperationsPhone:
    AllowedPattern: '^$|^[\s0-9()+-]+$'
    ConstraintDescription: Must be numbers, special characters [()+-], and/or whitespace
    Default: ""
    Description:
      (Optional) Phone Number for Operations alternate contact. If 'Operations Alternate Contact Action' parameter is set to 'add', then this
      parameter becomes required.
    Type: String
  pOperationsTitle:
    AllowedPattern: '^(?![&<>\\%|]).*$'
    ConstraintDescription: All characters allowed except '&<>\%|'
    Default: ""
    Description:
      (Optional) Title for Operations alternate contact. If 'Operations Alternate Contact Action' parameter is set to 'add', then this parameter
      becomes required.
    Type: String
  pSecurityContactAction:
    AllowedValues: ["add", "delete", "ignore"]
    Default: add
    Description: Indicates whether to add, delete, or ignore the Security alternate contact.
    Type: String
  pSecurityEmail:
    AllowedPattern: '^$|^([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)$'
    ConstraintDescription: Email Validation as per RFC2822 standards.
    Default: ""
    Description:
      (Optional) Email Address for Security alternate contact. If 'Security Alternate Contact Action' parameter is set to 'add', then this parameter
      becomes required.
    Type: String
  pSecurityName:
    AllowedPattern: '^(?![&<>\\%|]).*$'
    ConstraintDescription: All characters allowed except '&<>\%|'
    Default: ""
    Description:
      (Optional) Full Name for Security alternate contact. If 'Security Alternate Contact Action' parameter is set to 'add', then this parameter
      becomes required.
    Type: String
  pSecurityPhone:
    AllowedPattern: '^$|^[\s0-9()+-]+$'
    ConstraintDescription: Must be numbers, special characters [()+-], and/or whitespace
    Default: ""
    Description:
      (Optional) Phone Number for Security alternate contact. If 'Security Alternate Contact Action' parameter is set to 'add', then this parameter
      becomes required.
    Type: String
  pSecurityTitle:
    AllowedPattern: '^(?![&<>\\%|]).*$'
    ConstraintDescription: All characters allowed except '&<>\%|'
    Default: ""
    Description:
      (Optional) Title for Security alternate contact. If 'Security Alternate Contact Action' parameter is set to 'add', then this parameter becomes
      required.
    Type: String
  pCommonPrerequisitesRegionsOnly:
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Only enable in the customer regions specified in Common Prerequisites solution
    Type: String
  pConfigEnabledRegions:
    AllowedPattern: "^$|^([a-z0-9-]{1,64})$|^(([a-z0-9-]{1,64},)*[a-z0-9-]{1,64})$"
    ConstraintDescription:
      Only lowercase letters, numbers, and hyphens ('-') allowed. (e.g. us-east-1) Additional AWS regions can be provided, separated by commas. (e.g.
      us-east-1,ap-southeast-2)
    Default: ""
    Description:
      (Optional) Enabled regions (AWS regions, separated by commas). If 'Common Prerequisites Regions Only' parameter is set to 'false', then this
      parameter becomes required.
    Type: String
  pAllSupported:
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Indicates whether to record all supported resource types. If set to 'false', then the 'Resource Types' parameter must have a value.
    Type: String
  pResourceTypes:
    AllowedPattern: "^$|^([0-9a-zA-Z]+::[0-9a-zA-Z]+::[0-9a-zA-Z]+)$|^(([0-9a-zA-Z]+::[0-9a-zA-Z]+::[0-9a-zA-Z]+(,|, ))*[0-9a-zA-Z]+::[0-9a-zA-Z]+::[0-9a-zA-Z]+)$"
    Default: ""
    Description:
      (Optional) A list of valid AWS resource types to include in this recording group. Eg. AWS::CloudTrail::Trail. If 'All Supported' parameter is
      set to 'false', then this parameter becomes required.
    Type: String
  pEnableRuntimeMonitoring:
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Auto enable Runtime Monitoring
    Type: String
  pEnableEksAddonManagement:
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Auto enable EKS Add-on Management
    Type: String
  pEnableEcsFargateAgentManagement:
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Auto enable ECS Fargate Agent Management
    Type: String
  pEnableEc2AgentManagement:
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Auto enable EC2 Agent Management
    Type: String
  pDeployShieldSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the AWS Shield Advanced solution.
    Type: String
  pDeployPatchMgrSolution:
    AllowedValues: ["Yes", "No"]
    Default: "No"
    Description: Deploy the Patch Manager solution.
    Type: String
  pCreateAWSControlTowerExecutionRole:
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: Indicates whether the AWS Control Tower Execution role should be created.
    Type: String

Rules:
  BillingContactValidation:
    RuleCondition: !And
      - !Equals [!Ref pDeployAccountAlternateContactsSolution, "Yes"]
      - !Equals [!Ref pBillingContactAction, "add"]
    Assertions:
      - Assert: !And
          - !Not [!Equals [!Ref pBillingName, ""]]
          - !Not [!Equals [!Ref pBillingTitle, ""]]
          - !Not [!Equals [!Ref pBillingEmail, ""]]
          - !Not [!Equals [!Ref pBillingPhone, ""]]
        AssertDescription:
          "'Billing Full Name', 'Billing Title', 'Billing Email' and 'Billing Phone' parameters are required if the 'Billing Alternate Contact Action'
          parameter is set to 'add'."
  DeployConfigConformancePackSolutionValidation:
    RuleCondition: !Equals [!Ref pDeployConfigConformancePackSolution, "Yes"]
    Assertions:
      - Assert: !Or
          - !Equals [!Ref pDeployConfigManagementSolution, "Yes"]
          - !Equals [!Ref pDeployConfigManagementSolution, "Already Deployed"]
          - !Equals [!Ref pDeployConfigSolution, "Yes"]
        AssertDescription:
          "'Deploy the AWS Config Management Solution' parameter must be set to 'Yes' or 'Already Deployed', if the 'Deploy the AWS Config Conformance
          Pack Solution' parameter is set to 'Yes'."
  DeploySecurityHubSolutionValidation:
    RuleCondition: !Equals [!Ref pDeploySecurityHubSolution, "Yes"]
    Assertions:
      - Assert: !Or
          - !Equals [!Ref pDeployConfigManagementSolution, "Yes"]
          - !Equals [!Ref pDeployConfigManagementSolution, "Already Deployed"]
          - !Equals [!Ref pDeployConfigSolution, "Yes"]
        AssertDescription:
          "'Deploy the AWS Config Management Solution' parameter must be set to 'Yes' or 'Already Deployed', if the 'Deploy the Security Hub Solution'
          parameter is set to 'Yes'."
  OperationsContactValidation:
    RuleCondition: !And
      - !Equals [!Ref pDeployAccountAlternateContactsSolution, "Yes"]
      - !Equals [!Ref pOperationsContactAction, "add"]
    Assertions:
      - Assert: !And
          - !Not [!Equals [!Ref pOperationsName, ""]]
          - !Not [!Equals [!Ref pOperationsTitle, ""]]
          - !Not [!Equals [!Ref pOperationsEmail, ""]]
          - !Not [!Equals [!Ref pOperationsPhone, ""]]
        AssertDescription:
          "'Operations Full Name', 'Operations Title', 'Operations Email' and 'Operations Phone' parameters are required if the 'Operations Alternate
          Contact Action' parameter is set to 'add'."
  SecurityContactValidation:
    RuleCondition: !And
      - !Equals [!Ref pDeployAccountAlternateContactsSolution, "Yes"]
      - !Equals [!Ref pSecurityContactAction, "add"]
    Assertions:
      - Assert: !And
          - !Not [!Equals [!Ref pSecurityName, ""]]
          - !Not [!Equals [!Ref pSecurityTitle, ""]]
          - !Not [!Equals [!Ref pSecurityEmail, ""]]
          - !Not [!Equals [!Ref pSecurityPhone, ""]]
        AssertDescription:
          "'Security Full Name', 'Security Title', 'Security Email' and 'Security Phone' parameters are required if the 'Security Alternate Contact
          Action' parameter is set to 'add'."
  EnabledRegionValidation:
    RuleCondition: !Equals [!Ref pCommonPrerequisitesRegionsOnly, "false"]
    Assertions:
      - Assert: !Not [!Equals [!Ref pConfigEnabledRegions, ""]]
        AssertDescription: "'Enabled Regions' parameter has to have a value if 'Common Prerequisites Regions Only' parameter is set to 'false'."
  ResourceTypesValidation:
    RuleCondition: !Equals [!Ref pAllSupported, "false"]
    Assertions:
      - AssertDescription: "'Resource Types' parameter is required if 'All Supported' parameter is set to 'false'."
        Assert: !Not [!Equals [!Ref pResourceTypes, ""]]
  CheckGuardDutyRuntimeEnabled:
    RuleCondition: !Equals [!Ref pEnableRuntimeMonitoring, "false"]
    Assertions:
      - Assert: !Not [!Equals [!Ref pEnableEksAddonManagement, "true"]]
        AssertDescription: "'Enable EKS Addon Management' requires Guardduty Runtime Monitoring to be enabled"
      - Assert: !Not [!Equals [!Ref pEnableEcsFargateAgentManagement, "true"]]
        AssertDescription: "'Enable Ecs Fargate Agent Management' requires Guardduty Runtime Monitoring to be enabled"
      - Assert: !Not [!Equals [!Ref pEnableEc2AgentManagement, "true"]]
        AssertDescription: "'Enable Ec2 Agent Management' requires Guardduty Runtime Monitoring to be enabled"

Conditions:
  cUsingKmsKey: !Not [!Equals [!Ref pLambdaLogGroupKmsKey, ""]]
  cUseGraviton: !Or
    - !Equals [!Ref "AWS::Region", ap-northeast-1]
    - !Equals [!Ref "AWS::Region", ap-south-1]
    - !Equals [!Ref "AWS::Region", ap-southeast-1]
    - !Equals [!Ref "AWS::Region", ap-southeast-2]
    - !Equals [!Ref "AWS::Region", eu-central-1]
    - !Equals [!Ref "AWS::Region", eu-west-1]
    - !Equals [!Ref "AWS::Region", eu-west-2]
    - !Equals [!Ref "AWS::Region", us-east-1]
    - !Equals [!Ref "AWS::Region", us-east-2]
    - !Equals [!Ref "AWS::Region", us-west-2]

  cDeployInspectorSolution: !Equals [!Ref pDeployInspectorSolution, "Yes"]

  cCreateLambdaLogGroup: !Equals [!Ref pCreateLambdaLogGroup, "Yes"]
  cDeployAccountAlternateContactsSolution:
    !Equals [!Ref pDeployAccountAlternateContactsSolution, "Yes"]
  cDeployCloudTrailSolution: !Equals [!Ref pDeployCloudTrailSolution, "Yes"]
  cDeployConfigSolution: !Equals [!Ref pDeployConfigSolution, "Yes"]
  cDeployConfigManagementSolution:
    !Equals [!Ref pDeployConfigManagementSolution, "Yes"]
  cDeployConfigManagementSolutionAlreadyDeployed:
    !Equals [!Ref pDeployConfigManagementSolution, "Already Deployed"]
  cDeployConfigConformancePackSolution: !And
    - !Or
      - !Condition cDeployConfigManagementSolution
      - !Condition cDeployConfigManagementSolutionAlreadyDeployed
      - !Condition cDeployConfigSolution
    - !Equals [!Ref pDeployConfigConformancePackSolution, "Yes"]
  cDeployDetectiveSolution: !Equals [!Ref pDeployDetectiveSolution, "Yes"]
  cDeployEC2DefaultEBSEncryptionSolution:
    !Equals [!Ref pDeployEC2DefaultEBSEncryptionSolution, "Yes"]
  cDeployFirewallManagerSolution:
    !Equals [!Ref pDeployFirewallManagerSolution, "Yes"]
  cDeployGuardDutySolution: !Equals [!Ref pDeployGuardDutySolution, "Yes"]
  cDeployIAMAccessAnalyzerSolution:
    !Equals [!Ref pDeployIAMAccessAnalyzerSolution, "Yes"]
  cDeployIAMPasswordPolicySolution:
    !Equals [!Ref pDeployIAMPasswordPolicySolution, "Yes"]
  cDeployMacieSolution: !Equals [!Ref pDeployMacieSolution, "Yes"]
  cDeployS3BlockAccountPublicAccessSolution:
    !Equals [!Ref pDeployS3BlockAccountPublicAccessSolution, "Yes"]
  cDeploySecurityHubSolution: !And
    - !Or
      - !Condition cDeployConfigManagementSolution
      - !Condition cDeployConfigManagementSolutionAlreadyDeployed
    - !Equals [!Ref pDeploySecurityHubSolution, "Yes"]
  cDeployShieldSolution: !Equals [!Ref pDeployShieldSolution, "Yes"]
  cDisableGuardDuty: !Equals [!Ref pDisableGuardDuty, "Yes"]
  cDisableMacie: !Equals [!Ref pDisableMacie, "Yes"]
  cDisableSecurityHub: !Equals [!Ref pDisableSecurityHub, "Yes"]
  cDeployPatchMgrSolution: !Equals [!Ref pDeployPatchMgrSolution, "Yes"]

Resources:
  rCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${pCodeBuildProjectName}"
      Artifacts:
        Type: NO_ARTIFACTS
      Description: "Codebuild project to get SRA code from github"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref "AWS::AccountId"
          - Name: SRA_REPO_URL
            Value: !Ref pRepoURL
          - Name: SRA_REPO_BRANCH_NAME
            Value: !Ref pRepoBranch
          - Name: SRA_STAGING_S3_BUCKET_STACK_NAME
            Value: !Ref pSRAStagingS3BucketStackName
        Image: "aws/codebuild/standard:5.0"
        PrivilegedMode: true
        Type: "LINUX_CONTAINER"
      ServiceRole: !GetAtt rCodeBuildRole.Arn
      TimeoutInMinutes: 120
      Source:
        Type: NO_SOURCE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo Build started on `date`...
            build:
              commands:
                - echo Build started on `date` in ${AWS::Region} region
                - echo Cloning SRA code repository from $SRA_REPO_URL...
                - git clone $SRA_REPO_URL
                - echo Listing current directory...
                - ls
                - cd aws-sra
                - git checkout $SRA_REPO_BRANCH_NAME
                - echo Showing current caller identity...
                - aws sts get-caller-identity
                - echo Deploying SRA staging bucket cloudformation template...
                - aws cloudformation deploy --template-file ./aws_sra/solutions/common/common_prerequisites/templates/sra-common-prerequisites-staging-s3-bucket.yaml --stack-name $SRA_STAGING_S3_BUCKET_STACK_NAME --capabilities CAPABILITY_NAMED_IAM
                - echo Staging SRA solutions...
                - ./aws_sra/utils/packaging_scripts/stage_solution.sh
            post_build:
              commands:
                - echo Build completed on `date`

  rCommonPrerequisitesManagementAccountParametersStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: rStartCodeBuildProjectCustomResource
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub
        - https://${SRAStagingS3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${pSRASolutionName}/templates/sra-common-prerequisites-management-account-parameters.yaml
        - SRAStagingS3BucketName: !Sub ${pSRAStagingS3BucketNamePrefix}-${pSRAStagingS3BucketNameSuffix}-${AWS::AccountId}-${AWS::Region}
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName
      Parameters:
        pControlTower: !Ref pControlTower
        pGovernedRegions: !Ref pGovernedRegions
        pSecurityAccountId: !Ref pSecurityAccountId
        pLogArchiveAccountId: !Ref pLogArchiveAccountId
        pSRAStagingS3BucketNameSuffix: !Ref pSRAStagingS3BucketNameSuffix

  rCommonPrerequisitesMainSsm:
    Type: AWS::CloudFormation::Stack
    DependsOn: rCommonPrerequisitesManagementAccountParametersStack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub
        - https://${SRAStagingS3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${pSRASolutionName}/templates/sra-common-prerequisites-main-ssm.yaml
        - SRAStagingS3BucketName: !Sub ${pSRAStagingS3BucketNamePrefix}-${pSRAStagingS3BucketNameSuffix}-${AWS::AccountId}-${AWS::Region}
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName
      Parameters:
        pCreateAWSControlTowerExecutionRole: !Ref pCreateAWSControlTowerExecutionRole
        pControlTower: !Ref pControlTower
        pSRAStagingS3BucketNameSuffix: !Ref pSRAStagingS3BucketNameSuffix

  rCodeBuildRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: Allow * in resource when required
          - id: W28
            reason: The role name is defined to identify automation resources
    Properties:
      RoleName: !Sub "${pCodeBuildRoleName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "logs-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
        - PolicyName: "cloudformation-changeset-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*"
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:changeSet/*"
        - PolicyName: "cloudformation-describe-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: "*"
        - PolicyName: "IAM-Access-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:PassRole
                  - iam:GetRolePolicy
                  - iam:PutRolePolicy
                  - iam:CreateRole
                  - iam:DeleteRolePolicy
                  - iam:DeleteRole
                  - iam:TagRole
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sra*"
        - PolicyName: "lambda-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:GetFunction
                  - lambda:GetFunctionCodeSigningConfig
                  - lambda:GetRuntimeManagementConfig
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:TagResource
                  - lambda:InvokeFunction
                Resource:
                  - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sra*"
        - PolicyName: "s3-staging-bucket-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:GetBucketAcl
                  - s3:GetBucketPolicy
                  - s3:DeleteBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${pSRAStagingS3BucketNamePrefix}-${pSRAStagingS3BucketNameSuffix}-${AWS::AccountId}-${AWS::Region}"
                  - !Sub "arn:${AWS::Partition}:s3:::${pSRAStagingS3BucketNamePrefix}-${pSRAStagingS3BucketNameSuffix}-${AWS::AccountId}-${AWS::Region}/*"
        - PolicyName: "s3-create-bucket-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:PutBucketPolicy
                  - s3:PutBucketTagging
                  - s3:PutBucketPublicAccessBlock
                  - s3:GetEncryptionConfiguration
                  - s3:PutEncryptionConfiguration
                  - s3:PutBucketOwnershipControls
                  - s3:CreateBucket
                  - s3:PutBucketAcl
                  - s3:PutBucketObjectLockConfiguration
                  - s3:PutBucketVersioning
                  - s3:SetBucketEncryption
                  - s3:PutBucketEncryption
                Resource:
                  - "arn:aws:s3:::*"
        - PolicyName: "ssm-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                  - ssm:AddTagsToResource
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sra*"

  rStartCodeBuildProjectCustomResource:
    DependsOn: rCodeBuildProject
    Type: Custom::LambdaCustomResource
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt rStartCodeBuildProjectLambdaFunction.Arn

  rStartCodeBuildProjectLambdaFunction:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: Lambda role provides access to CloudWatch Logs
          - id: W89
            reason: Lambda does not need to communicate with VPC resources.
          - id: W92
            reason: Lambda does not need reserved concurrent executions.
      checkov:
        skip:
          - id: CKV_AWS_115
            comment: Lambda does not need reserved concurrent executions.
          - id: CKV_AWS_116
            comment: DLQ not needed, as Lambda function only triggered by CloudFormation events.
          - id: CKV_AWS_117
            comment: Lambda does not need to communicate with VPC resources.
          - id: CKV_AWS_173
            comment: Environment variables are not sensitive.
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref pCodeBuildProjectLambdaFunctionName
      Description: Start SRA codebuild project
      Architectures: !If
        - cUseGraviton
        - [arm64]
        - !Ref AWS::NoValue
      Handler: index.lambda_handler
      Role: !GetAtt rStartCodeBuildProjectLambdaRole.Arn
      Runtime: python3.9
      Timeout: 900
      Environment:
        Variables:
          LOG_LEVEL: !Ref pLambdaLogLevel
          CODE_BUILD_PROJECT_NAME: !Ref pCodeBuildProjectName
          SRA_STAGING_S3_BUCKET_NAME: !Sub ${pSRAStagingS3BucketNamePrefix}-${pSRAStagingS3BucketNameSuffix}-${AWS::AccountId}-${AWS::Region}
          SRA_STAGING_S3_BUCKET_STACK_NAME: !Ref pSRAStagingS3BucketStackName
      Tags:
        - Key: !Ref pSRASolutionTagKey
          Value: !Ref pSRASolutionName
      Code:
        ZipFile: |
          # type: ignore
          """Custom Resource to start codebuild project.

          Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
          SPDX-License-Identifier: MIT-0
          """
          import logging
          import os

          import boto3
          import cfnresponse
          import time
          from botocore.exceptions import ClientError

          LOGGER = logging.getLogger(__name__)
          log_level: str = os.environ.get("LOG_LEVEL", "INFO")
          LOGGER.setLevel(log_level)
          CODE_BUILD_PROJECT_NAME: str = os.environ.get("CODE_BUILD_PROJECT_NAME")
          SRA_STAGING_S3_BUCKET_NAME: str = os.environ.get("SRA_STAGING_S3_BUCKET_NAME")
          SRA_STAGING_S3_BUCKET_STACK_NAME: str = os.environ.get("SRA_STAGING_S3_BUCKET_STACK_NAME")


          def start_build():
              """Start build job.

              Returns:
                  Response data for custom resource
              """
              management_account_session = boto3.Session()
              codebuild_client = management_account_session.client("codebuild")
              response = codebuild_client.start_build(projectName=CODE_BUILD_PROJECT_NAME)
              LOGGER.info({"API_Call": "codebuild:StartBuild", "API_Response": response})
              buildId = response["build"]["id"]
              return wait_for_build([buildId], codebuild_client)


          def wait_for_build(BuildId, client):
              buildWaitStatus = "FAILURE_WAIT_TIMEOUT"
              counter = 0
              while counter < 45:
                  time.sleep(10)
                  counter = counter + 1
                  buildStatus = get_build_status(BuildId, client)
                  if buildStatus == "SUCCEEDED":
                      buildWaitStatus = "SUCCESS"
                      break
                  elif buildStatus == "FAILED" or buildStatus == "FAULT" or buildStatus == "STOPPED" or buildStatus == "TIMED_OUT":
                      buildWaitStatus = "BUILD " + buildStatus + " (check codebuild project cloudwatch log group for details)"
                      break
              return buildWaitStatus


          def get_build_status(buildId, client):
              build = client.batch_get_builds(ids=buildId)
              return build["builds"][0]["buildStatus"]


          def create_event(event, context):
              try:
                  data = {"data": start_build()}
                  if data["data"] == "SUCCESS":
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, data, "CustomResourcePhysicalID")
                  else:
                      reason = f"See the details in CloudWatch Log Stream: '{context.log_group_name} and CloudFormation Events'"
                      cfnresponse.send(event, context, cfnresponse.FAILED, data, "CustomResourcePhysicalID")
              except Exception:
                  LOGGER.exception("Unexpected!")
                  reason = f"See the details in CloudWatch Log Stream: '{context.log_group_name}'"
                  cfnresponse.send(event, context, cfnresponse.FAILED, {}, "CustomResourcePhysicalID", reason=reason)
              return "CustomResourcePhysicalID"


          def delete_event(event, context):
              cfn_client = boto3.client("cloudformation")
              s3_client = boto3.resource("s3")
              staging_bucket = s3_client.Bucket(SRA_STAGING_S3_BUCKET_NAME)
              try:
                  bucket_versioning = staging_bucket.Versioning()
                  if bucket_versioning.status == "Enabled":
                      LOGGER.info("versioning enabled; deleting object versions")
                      delete_version_response = staging_bucket.object_versions.delete()
                      LOGGER.info("see next message for delete response")
                      LOGGER.info(delete_version_response)
                      LOGGER.info("suspending versioning...")
                      bucket_versioning.suspend()
                  LOGGER.info("deleting objects")
                  delete_object_response = staging_bucket.objects.all().delete()
                  LOGGER.info("see next message for delete object response")
                  LOGGER.info(delete_object_response)
              except ClientError as e:
                  LOGGER.info(f"Delete objects error: {e}")
                  reason = f"See the details in CloudWatch Log Stream: '{context.log_group_name}'"
                  cfnresponse.send(event, context, cfnresponse.FAILED, {}, "CustomResourcePhysicalID", reason=reason)
              cfn_response = cfn_client.delete_stack(StackName=SRA_STAGING_S3_BUCKET_STACK_NAME)
              LOGGER.info(cfn_response)
              waiter = cfn_client.get_waiter("stack_delete_complete")
              waiter.wait(StackName=SRA_STAGING_S3_BUCKET_STACK_NAME, WaiterConfig={"Delay": 15, "MaxAttempts": 120})
              LOGGER.info(SRA_STAGING_S3_BUCKET_STACK_NAME + " stack deleted")
              cfnresponse.send(event, context, cfnresponse.SUCCESS, {"delete_operation": f"succeeded deleting {SRA_STAGING_S3_BUCKET_STACK_NAME}"}, "CustomResourcePhysicalID")


          def lambda_handler(event, context):
              LOGGER.info(event)
              if event["RequestType"] == "Create":
                  LOGGER.info("CREATE EVENT!!")
                  create_event(event, context)
              if event["RequestType"] == "Update":
                  LOGGER.info("UPDATE EVENT!!")

              if event["RequestType"] == "Delete":
                  LOGGER.info("DELETE EVENT!!")
                  delete_event(event, context)

  rStartCodeBuildProjectLambdaLogGroup:
    DeletionPolicy: Retain
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${pCodeBuildProjectLambdaFunctionName}
      KmsKeyId: !If
        - cUsingKmsKey
        - !Ref pLambdaLogGroupKmsKey
        - !Ref AWS::NoValue
      RetentionInDays: !Ref pLambdaLogGroupRetention

  rStartCodeBuildProjectLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          #       - id: W11
          #         reason: Allow * in resource when required
          - id: W28
            reason: The role name is defined to identify automation resources
    Properties:
      RoleName: !Ref pCodeBuildProjectLambdaRoleName
      Description: !Sub Role for '${pCodeBuildProjectLambdaRoleName}' Lambda function
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Tags:
        - Key: !Ref pSRASolutionTagKey
          Value: !Ref pSRASolutionName
      Policies:
        - PolicyName: codebuild-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: codebuildStartBuild
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !GetAtt rCodeBuildProject.Arn
        - PolicyName: CloudWatchLogGroup-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${pCodeBuildProjectLambdaFunctionName}:log-stream:*
        - PolicyName: "s3-staging-bucket-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:GetBucketAcl
                  - s3:GetBucketPolicy
                  - s3:GetObjectAcl
                  - s3:PutObjectAcl
                  - s3:DeleteBucket
                  - s3:DeleteObject
                  - s3:DeleteObjectVersion
                  - s3:GetBucketVersioning
                  - s3:DeleteBucketPolicy
                  - s3:ListBucketVersions
                  - s3:PutBucketVersioning
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${pSRAStagingS3BucketNamePrefix}-${pSRAStagingS3BucketNameSuffix}-${AWS::AccountId}-${AWS::Region}"
                  - !Sub "arn:${AWS::Partition}:s3:::${pSRAStagingS3BucketNamePrefix}-${pSRAStagingS3BucketNameSuffix}-${AWS::AccountId}-${AWS::Region}/*"
        - PolicyName: "lambda-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:DeleteFunction
                  - lambda:InvokeFunction
                Resource:
                  - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sra*"
        - PolicyName: "cloudformation-stack-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sra*"
        - PolicyName: "IAM-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sra*"
